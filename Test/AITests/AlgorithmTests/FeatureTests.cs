using System;
using AI.Algorithms;
using Engine.Extensions;
using NUnit.Framework;

namespace Test.AITests.AlgorithmTests
{
    [TestFixture]
    public class FeatureTests : TestBase
    {
        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000010
                    0000000000000010", 3)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0100000000000000
                    0100000000000000
                    0100000000000000", 3)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0101000000000000
                    0101000000000000
                    0101000000000000", 6)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0010100000000000
                    0010100000000000
                    0010100000000000", 3)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0010000000000000
                    0010000000000000
                    0010000000000000", 0)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000100
                    0000000000000100
                    0000000000000100", 0)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000001002000000
                    0000001002000000
                    0000001002000000", 0)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    1111111012111111
                    1111111012111111
                    1111111012111111", 3)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    1111111002111111
                    1111111002111111
                    1111111002111111", 0)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    1111111102111111
                    1111111102111111
                    1111111012111111
                    1111111012111111
                    1111111012111111", 2)]
        public void WellSums(string input, int expeceted)
        {
            var matrix = input.StringToByteMatrix(10);
            var features = new Features(matrix);

            Console.WriteLine(matrix.MatrixToString(null));
            Assert.AreEqual(expeceted, features.WellSums());
        }

        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000011
                    0000000000000010", 1)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0100000000000000
                    1100000000000000
                    0100000000000000", 1)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    1111000000000000
                    0101000000000000
                    0101000000000000", 4)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0011100000000000
                    0010100000000000
                    0010100000000000", 2)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0001110000000000
                    0000100000000000", 2)]
        public void NumberOfHoles(string input, int expeceted)
        {
            var matrix = input.StringToByteMatrix(10);
            var features = new Features(matrix);

            Assert.AreEqual(expeceted, features.NumberOfHoles());
        }

        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010", 2)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000010", 4)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000010
                    0000000000000010
                    0000000000000010", 6)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    1000000000001010", 5)]
        public void ColumnTransitions(string input, int expeceted)
        {
            var matrix = input.StringToByteMatrix(10);
            var features = new Features(matrix);

            Assert.AreEqual(expeceted, features.ColumnTransitions());
        }

        [Test]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0010100000000000", 4)]
        [TestCase(@"0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000000000000000
                    0000100000000000
                    0000100000000000", 2)]
        public void RowTransitions(string input, int expeceted)
        {
            var matrix = input.StringToByteMatrix(10);
            var features = new Features(matrix);

            Assert.AreEqual(expeceted, features.RowTransitions());
        }
    }
}
